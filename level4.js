// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Ä–æ–≤–Ω—è 4 - –ö–æ—Å–º–∏—á–µ—Å–∫–∏–π –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ü–ª–∞–Ω–µ—Ç
document.addEventListener('DOMContentLoaded', function() {
    // –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    const scanBtn = document.getElementById('scan-btn');
    const scannerDisplay = document.getElementById('scanner-display');
    const planetPreview = document.getElementById('planet-preview');
    const scanningAnimation = document.getElementById('scanning-animation');
    const catSpeech = document.getElementById('cat-speech');
    const tasks = document.querySelectorAll('.task');
    const optionBtns = document.querySelectorAll('.option-btn');
    const hintBtns = document.querySelectorAll('.hint-btn');
    const nextTaskBtn = document.getElementById('next-task');
    const backToMapBtn = document.getElementById('back-to-map');
    const checkSettingsBtn = document.getElementById('check-settings-btn');
    
    // –≠–ª–µ–º–µ–Ω—Ç—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const greenBar = document.getElementById('green-bar');
    const iceBar = document.getElementById('ice-bar');
    const lavaBar = document.getElementById('lava-bar');
    const greenCount = document.getElementById('green-count');
    const iceCount = document.getElementById('ice-count');
    const lavaCount = document.getElementById('lava-count');
    const totalScans = document.getElementById('total-scans');
    
    // –≠–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é
    const greenProb = document.getElementById('green-prob');
    const iceProb = document.getElementById('ice-prob');
    const lavaProb = document.getElementById('lava-prob');
    const greenValue = document.getElementById('green-value');
    const iceValue = document.getElementById('ice-value');
    const lavaValue = document.getElementById('lava-value');
    const totalValue = document.getElementById('total-value');
    
    // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    const achievementsPanel = document.getElementById('achievements');
    const lavaStreak = document.getElementById('lava-streak');
    const iceWarning = document.getElementById('ice-warning');
    
    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    let currentTask = 0;
    let completedTasks = 0;
    const totalTasks = tasks.length;
    let scanResults = {
        green: 0,
        ice: 0,
        lava: 0,
        total: 0,
        lastPlanets: []
    };
    
    // –ü–ª–∞–Ω–µ—Ç—ã –∏ –∏—Ö —Å–≤–æ–π—Å—Ç–≤–∞
    const planets = {
        green: {
            name: "–ó–µ–ª—ë–Ω–∞—è –ø–ª–∞–Ω–µ—Ç–∞",
            emoji: "üü¢",
            color: "#28a745",
            desc: "–ò–¥–µ–∞–ª—å–Ω–∞ –¥–ª—è –±–∞–∑—ã! –ï—Å—Ç—å –≤–æ–¥–∞ –∏ —Ä–∞—Å—Ç–µ–Ω–∏—è.",
            sound: new Audio('sounds/green_planet.mp3')
        },
        ice: {
            name: "–õ–µ–¥—è–Ω–∞—è –ø–ª–∞–Ω–µ—Ç–∞",
            emoji: "‚ùÑÔ∏è",
            color: "#17a2b8",
            desc: "–•–æ–ª–æ–¥–Ω–æ, –Ω–æ –µ—Å—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –∏—Å–∫–æ–ø–∞–µ–º—ã–µ.",
            sound: new Audio('sounds/ice_planet.mp3')
        },
        lava: {
            name: "–õ–∞–≤–æ–≤–∞—è –ø–ª–∞–Ω–µ—Ç–∞",
            emoji: "üåã",
            color: "#dc3545",
            desc: "–û–ø–∞—Å–Ω–æ, –Ω–æ –º–æ–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å —Ä–µ–¥–∫–∏–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã!",
            sound: new Audio('sounds/lava_planet.mp3')
        }
    };
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    showTask(currentTask);
    updateProbabilityDisplay();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    scanBtn.addEventListener('click', scanPlanet);
    
    greenProb.addEventListener('input', updateProbabilityDisplay);
    iceProb.addEventListener('input', updateProbabilityDisplay);
    lavaProb.addEventListener('input', updateProbabilityDisplay);
    
    nextTaskBtn.addEventListener('click', function() {
        currentTask++;
        if (currentTask < totalTasks) {
            showTask(currentTask);
            nextTaskBtn.classList.add('hidden');
        } else {
            completeLevel();
        }
    });
    
    backToMapBtn.addEventListener('click', function() {
       // –ò—Å–ø–æ–ª—å–∑—É–µ–º window.opener –µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç–æ –∏–∑ –æ–∫–Ω–∞, –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ index.html —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
if (window.opener) {
    window.opener.completeLevel(4);
    window.close();
} else {
    window.location.href = 'index.html?completed=4';
}
    });
    
    checkSettingsBtn.addEventListener('click', checkCustomSettings);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞
    optionBtns.forEach(btn => {
        btn.addEventListener('click', function() {
            // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            if (btn.id !== 'check-settings-btn') {
                const isCorrect = this.getAttribute('data-correct') === 'true';
                
                if (isCorrect) {
                    this.classList.add('correct');
                    completedTasks++;
                    
                    // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è
                    if (currentTask < totalTasks - 1) {
                        nextTaskBtn.classList.remove('hidden');
                    } else {
                        completeLevel();
                    }
                    
                    // –û–±–Ω–æ–≤–∏—Ç—å —Ä–µ—á—å –∫–æ—Ç–∞
                    catSpeech.textContent = getRandomCongratulation();
                } else {
                    this.classList.add('incorrect');
                    catSpeech.textContent = '–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑! –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏.';
                }
            }
        });
    });
    
// –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É
hintBtns.forEach(btn => {
    btn.addEventListener('click', function() {
        const taskContainer = this.closest('.task');
        const hint = taskContainer.querySelector('.hint');
        hint.classList.toggle('hidden');
        this.textContent = hint.classList.contains('hidden') ? '–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É' : '–°–∫—Ä—ã—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É';
    });
});
    
    // –§—É–Ω–∫—Ü–∏–∏
    function showTask(index) {
        tasks.forEach((task, i) => {
            task.classList.toggle('active', i === index);
            task.classList.toggle('hidden', i !== index);
        });
    }
    
    function updateProbabilityDisplay() {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
        const green = parseInt(greenProb.value);
        const ice = parseInt(iceProb.value);
        const lava = parseInt(lavaProb.value);
        
        greenValue.textContent = green;
        iceValue.textContent = ice;
        lavaValue.textContent = lava;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã —Å—É–º–º–∞ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–ª–∞ 100%
        const total = green + ice + lava;
        totalValue.textContent = total;
        
        if (total > 100) {
            totalValue.style.color = "#dc3545";
        } else {
            totalValue.style.color = "#fec72d";
        }
    }
    
    function scanPlanet() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—É–º–º–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π —Ä–∞–≤–Ω–∞ 100%
        const green = parseInt(greenProb.value);
        const ice = parseInt(iceProb.value);
        const lava = parseInt(lavaProb.value);
        const total = green + ice + lava;
        
        if (total !== 100) {
            catSpeech.textContent = "–°—É–º–º–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–æ–≤–Ω–æ 100%! –ù–∞—Å—Ç—Ä–æ–π —Å–∫–∞–Ω–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ.";
            return;
        }
        
        // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ –≤—Ä–µ–º—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        scanBtn.disabled = true;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        planetPreview.classList.add('hidden');
        scanningAnimation.classList.remove('hidden');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∑–≤—É–∫ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        const scanSound = new Audio('sounds/scan.mp3');
        scanSound.play();
        
        // –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        setTimeout(() => {
            // –°–∫—Ä—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
            scanningAnimation.classList.add('hidden');
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—É—é –ø–ª–∞–Ω–µ—Ç—É
            const planetType = generatePlanet(green, ice, lava);
            const planet = planets[planetType];
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            scanResults[planetType]++;
            scanResults.total++;
            scanResults.lastPlanets.unshift(planetType);
            if (scanResults.lastPlanets.length > 5) {
                scanResults.lastPlanets.pop();
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
            checkAchievements();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–∞–Ω–µ—Ç—É
            planetPreview.innerHTML = `
                <div class="planet-emoji">${planet.emoji}</div>
                <div class="planet-info">
                    <h3>${planet.name}</h3>
                    <p>${planet.desc}</p>
                </div>
            `;
            planetPreview.style.backgroundColor = planet.color;
            planetPreview.classList.remove('hidden');
            
            // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫ –ø–ª–∞–Ω–µ—Ç—ã
            planet.sound.play();
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            updateStats();
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ—á—å –∫–æ—Ç–∞
            updateCatSpeech(planetType);
            
            // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
            scanBtn.disabled = false;
        }, 2000);
    }
    
    function generatePlanet(greenProb, iceProb, lavaProb) {
        const random = Math.random() * 100;
        
        if (random < greenProb) {
            return 'green';
        } else if (random < greenProb + iceProb) {
            return 'ice';
        } else {
            return 'lava';
        }
    }
    
    function updateStats() {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏
        greenCount.textContent = scanResults.green;
        iceCount.textContent = scanResults.ice;
        lavaCount.textContent = scanResults.lava;
        totalScans.textContent = scanResults.total;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫–∏
        if (scanResults.total > 0) {
            const greenPercent = (scanResults.green / scanResults.total) * 100;
            const icePercent = (scanResults.ice / scanResults.total) * 100;
            const lavaPercent = (scanResults.lava / scanResults.total) * 100;
            
            greenBar.style.width = `${greenPercent}%`;
            iceBar.style.width = `${icePercent}%`;
            lavaBar.style.width = `${lavaPercent}%`;
        }
    }
    
    function updateCatSpeech(planetType) {
        const planet = planets[planetType];
        const phrases = [
            `–ù–∞–π–¥–µ–Ω–∞ ${planet.name.toLowerCase()}! ${planet.desc}`,
            `–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: ${planet.name}!`,
            `–£—Ö —Ç—ã! –≠—Ç–æ ${planet.name.toLowerCase()}!`,
        ];
        
        catSpeech.textContent = phrases[Math.floor(Math.random() * phrases.length)];
    }
    
    function getRandomCongratulation() {
        const phrases = [
            '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –¢—ã –æ—Ç–ª–∏—á–Ω–æ —Ä–∞–∑–±–∏—Ä–∞–µ—à—å—Å—è –≤ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏!',
            '–í–µ—Ä–Ω–æ! –ö–æ—Å–º–∏—á–µ—Å–∫–∏–π —Å–∫–∞–Ω–µ—Ä –≥–æ—Ä–¥–∏—Ç—Å—è —Ç–æ–±–æ–π!',
            '–ú–æ–ª–æ–¥–µ—Ü! –¢—ã —Ä–µ—à–∏–ª –∑–∞–¥–∞—á—É –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π —É—á—ë–Ω—ã–π!',
            '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –¢—ã –ø–æ–Ω—è–ª –ø—Ä–∏–Ω—Ü–∏–ø –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏!'
        ];
        
        return phrases[Math.floor(Math.random() * phrases.length)];
    }
    
    function completeLevel() {
        // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è
        catSpeech.textContent = '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –∑–∞–≤–µ—Ä—à–∏–ª —É—Ä–æ–≤–µ–Ω—å "–ö–æ—Å–º–∏—á–µ—Å–∫–∏–π –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ü–ª–∞–Ω–µ—Ç"! –¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å!';
    }
    
    function checkAchievements() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ 3 –ª–∞–≤–æ–≤—ã–µ –ø–ª–∞–Ω–µ—Ç—ã –ø–æ–¥—Ä—è–¥
        if (scanResults.lastPlanets.length >= 3 && 
            scanResults.lastPlanets[0] === 'lava' && 
            scanResults.lastPlanets[1] === 'lava' && 
            scanResults.lastPlanets[2] === 'lava') {
            lavaStreak.classList.add('unlocked');
            achievementsPanel.classList.remove('hidden');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            catSpeech.textContent = '–£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ! 3 –ª–∞–≤–æ–≤—ã–µ –ø–ª–∞–Ω–µ—Ç—ã –ø–æ–¥—Ä—è–¥! –¢—ã –ø–æ–ª—É—á–∏–ª —Ç–µ—Ä–º–æ—É—Å—Ç–æ–π—á–∏–≤—ã–π —Å–∫–∞–Ω–µ—Ä!';
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ 5 –ª–µ–¥—è–Ω—ã—Ö –ø–ª–∞–Ω–µ—Ç –ø–æ–¥—Ä—è–¥
        if (scanResults.lastPlanets.length >= 5 && 
            scanResults.lastPlanets[0] === 'ice' && 
            scanResults.lastPlanets[1] === 'ice' && 
            scanResults.lastPlanets[2] === 'ice' && 
            scanResults.lastPlanets[3] === 'ice' && 
            scanResults.lastPlanets[4] === 'ice') {
            iceWarning.classList.add('unlocked');
            achievementsPanel.classList.remove('hidden');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            catSpeech.textContent = '–û—Å—Ç–æ—Ä–æ–∂–Ω–æ! 5 –ª–µ–¥—è–Ω—ã—Ö –ø–ª–∞–Ω–µ—Ç –ø–æ–¥—Ä—è–¥! –ö–æ—Ä–∞–±–ª—å –º–æ–∂–µ—Ç –∑–∞–º–µ–¥–ª–∏—Ç—å—Å—è –∏–∑-–∑–∞ –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è!';
        }
    }
    
    function checkCustomSettings() {
        const green = parseInt(greenProb.value);
        const ice = parseInt(iceProb.value);
        const lava = parseInt(lavaProb.value);
        
        if (green + ice + lava !== 100) {
            catSpeech.textContent = "–°—É–º–º–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–æ–≤–Ω–æ 100%!";
            return;
        }
        
        if (lava > ice) {
            checkSettingsBtn.classList.add('correct');
            catSpeech.textContent = "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –ª–∞–≤–æ–≤—ã–µ –ø–ª–∞–Ω–µ—Ç—ã –±—É–¥—É—Ç –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è —á–∞—â–µ –ª–µ–¥—è–Ω—ã—Ö!";
            completedTasks++;
            
            // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è
            if (currentTask < totalTasks - 1) {
                nextTaskBtn.classList.remove('hidden');
            } else {
                completeLevel();
            }
        } else {
            checkSettingsBtn.classList.add('incorrect');
            catSpeech.textContent = "–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑! –°–¥–µ–ª–∞–π –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ª–∞–≤–æ–≤–æ–π –ø–ª–∞–Ω–µ—Ç—ã –±–æ–ª—å—à–µ, —á–µ–º –¥–ª—è –ª–µ–¥—è–Ω–æ–π.";
        }
    }
});